{"version":3,"sources":["logo.svg","components/Header.tsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","pages","settings","Header","anchorElNav","setAnchorElNav","React","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","AdbIcon","sx","display","xs","md","mr","Typography","variant","noWrap","component","href","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","MenuIcon","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","key","textAlign","Button","my","Tooltip","title","p","Avatar","alt","src","mt","setting","App","createElement","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.acc1d508.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\n\nconst pages = ['Companies', 'Applied', 'Remaining'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nfunction Header() {\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"#app-bar-with-responsive-menu\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOGO\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"#app-bar-with-responsive-menu\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOGO\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default Header;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}