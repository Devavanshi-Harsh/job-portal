{"version":3,"sources":["logo.svg","components/Header.tsx","static/Companies.tsx","components/Dashboard.tsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","pages","settings","Header","anchorElNav","setAnchorElNav","React","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","AppBar","position","sx","backgroundColor","color","Container","maxWidth","Toolbar","disableGutters","AdbIcon","display","xs","md","mr","Typography","variant","noWrap","component","href","fontFamily","fontWeight","letterSpacing","textDecoration","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","MenuIcon","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","key","textAlign","gap","Button","my","Tooltip","title","p","Avatar","alt","src","mt","setting","companies","companyName","type","careerPortal","netWorth","useStyles","makeStyles","theme","table","minWidth","row","palette","action","hover","addButton","marginTop","spacing","tableCell","breakpoints","down","padding","common","black","tableHeader","white","link","primary","main","Dashboard","classes","orderBy","setOrderBy","useState","order","setOrder","getRowColor","index","handleSort","property","sortedCompanies","sort","a","b","orderMultiplier","createElement","TableContainer","Paper","Table","className","TableHead","TableRow","TableCell","concat","TableSortLabel","active","direction","TableBody","company","style","scope","Link","target","rel","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d4b8dfbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\n\nconst pages = ['Companies', 'Applied', 'Remaining'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nfunction Header() {\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\" sx={{ backgroundColor: '#F4CE14', color:\"#45474B\" }}>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"#app-bar-with-responsive-menu\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            Job Portal\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"#app-bar-with-responsive-menu\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOGO\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' }, gap: 1}}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'black', display: 'block' }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default Header;","const companies = [\n    {\n      companyName: \"Google\",\n      type: \"Technology\",\n      careerPortal: \"https://careers.google.com\",\n      netWorth: \"$1.8 trillion\"\n    },\n    {\n      companyName: \"Microsoft\",\n      type: \"Technology\",\n      careerPortal: \"https://careers.microsoft.com\",\n      netWorth: \"$2.4 trillion\"\n    },\n    {\n      companyName: \"Apple\",\n      type: \"Technology\",\n      careerPortal: \"https://jobs.apple.com\",\n      netWorth: \"$2.7 trillion\"\n    },\n    {\n      companyName: \"Amazon\",\n      type: \"E-commerce\",\n      careerPortal: \"https://www.amazon.jobs\",\n      netWorth: \"$1.7 trillion\"\n    },\n    {\n      companyName: \"Facebook (Meta)\",\n      type: \"Social Media\",\n      careerPortal: \"https://www.metacareers.com\",\n      netWorth: \"$930 billion\"\n    },\n    {\n      companyName: \"IBM\",\n      type: \"Technology\",\n      careerPortal: \"https://www.ibm.com/employment\",\n      netWorth: \"$120 billion\"\n    },\n    {\n      companyName: \"Intel\",\n      type: \"Semiconductors\",\n      careerPortal: \"https://jobs.intel.com\",\n      netWorth: \"$220 billion\"\n    },\n    {\n      companyName: \"Oracle\",\n      type: \"Technology\",\n      careerPortal: \"https://oracle.taleo.net\",\n      netWorth: \"$270 billion\"\n    },\n    {\n      companyName: \"Cisco\",\n      type: \"Networking\",\n      careerPortal: \"https://jobs.cisco.com\",\n      netWorth: \"$230 billion\"\n    },\n    {\n      companyName: \"Adobe\",\n      type: \"Software\",\n      careerPortal: \"https://adobe.wd5.myworkdayjobs.com/en-US/external_experienced\",\n      netWorth: \"$260 billion\"\n    },\n    {\n      companyName: \"Salesforce\",\n      type: \"Cloud Computing\",\n      careerPortal: \"https://www.salesforce.com/company/careers\",\n      netWorth: \"$220 billion\"\n    },\n    {\n      companyName: \"SAP\",\n      type: \"Enterprise Software\",\n      careerPortal: \"https://jobs.sap.com\",\n      netWorth: \"$160 billion\"\n    },\n    {\n      companyName: \"Siemens\",\n      type: \"Engineering\",\n      careerPortal: \"https://jobs.siemens.com\",\n      netWorth: \"$120 billion\"\n    },\n    {\n      companyName: \"Qualcomm\",\n      type: \"Semiconductors\",\n      careerPortal: \"https://www.qualcomm.com/company/careers\",\n      netWorth: \"$150 billion\"\n    },\n    {\n      companyName: \"NVIDIA\",\n      type: \"Semiconductors\",\n      careerPortal: \"https://nvidia.wd5.myworkdayjobs.com/en-US/NVIDIAExternalCareerSite\",\n      netWorth: \"$680 billion\"\n    },\n    {\n      companyName: \"HP Inc.\",\n      type: \"Technology\",\n      careerPortal: \"https://jobs.hp.com\",\n      netWorth: \"$30 billion\"\n    },\n    {\n      companyName: \"Dell Technologies\",\n      type: \"Technology\",\n      careerPortal: \"https://jobs.dell.com\",\n      netWorth: \"$80 billion\"\n    },\n    {\n      companyName: \"Samsung\",\n      type: \"Electronics\",\n      careerPortal: \"https://careers.samsung.com\",\n      netWorth: \"$500 billion\"\n    },\n    {\n      companyName: \"LG Electronics\",\n      type: \"Electronics\",\n      careerPortal: \"https://careers.lg.com\",\n      netWorth: \"$130 billion\"\n    },\n    {\n      companyName: \"Sony\",\n      type: \"Electronics\",\n      careerPortal: \"https://www.sonyjobs.com\",\n      netWorth: \"$135 billion\"\n    }\n  ];\n  \n  export default companies;\n  ","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  Typography,\n  TableSortLabel,\n  Link,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport companies from '../static/Companies';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  row: {\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n  },\n  tableCell: {\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(1),\n    },\n    color: theme.palette.common.black,\n  },\n  tableHeader: {\n    backgroundColor: '#45474B',\n    color: theme.palette.common.white,\n    fontWeight: 'bold',\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [orderBy, setOrderBy] = useState('companyName');\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\n\n  const getRowColor = (index: number) => {\n    const colors = ['#F5F7F8', '#D0D4CA'];\n    return colors[index % 2];\n  };\n\n  const handleSort = (property: string) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const sortedCompanies = companies.sort((a, b) => {\n    const orderMultiplier = order === 'asc' ? 1 : -1;\n    if (orderBy === 'companyName' || orderBy === 'type' || orderBy === 'careerPortal' || orderBy === 'netWorth') {\n      return a[orderBy] < b[orderBy] ? -1 * orderMultiplier : 1 * orderMultiplier;\n    }\n    return 0;\n  });\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"companies table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={`${classes.tableCell} ${classes.tableHeader}`}>\n                <TableSortLabel\n                  active={orderBy === 'companyName'}\n                  direction={orderBy === 'companyName' ? order : 'asc'}\n                  onClick={() => handleSort('companyName')}\n                >\n                  Name\n                </TableSortLabel>\n              </TableCell>\n              <TableCell className={`${classes.tableCell} ${classes.tableHeader}`}>\n                <TableSortLabel\n                  active={orderBy === 'type'}\n                  direction={orderBy === 'type' ? order : 'asc'}\n                  onClick={() => handleSort('type')}\n                >\n                  Type\n                </TableSortLabel>\n              </TableCell>\n              <TableCell className={`${classes.tableCell} ${classes.tableHeader}`}>\n                <TableSortLabel\n                  active={orderBy === 'careerPortal'}\n                  direction={orderBy === 'careerPortal' ? order : 'asc'}\n                  onClick={() => handleSort('careerPortal')}\n                >\n                  Career Portal\n                </TableSortLabel>\n              </TableCell>\n              <TableCell className={`${classes.tableCell} ${classes.tableHeader}`}>\n                <TableSortLabel\n                  active={orderBy === 'netWorth'}\n                  direction={orderBy === 'netWorth' ? order : 'asc'}\n                  onClick={() => handleSort('netWorth')}\n                >\n                  Net Worth\n                </TableSortLabel>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortedCompanies.map((company, index) => (\n              <TableRow\n                key={company.companyName}\n                className={classes.row}\n                style={{ backgroundColor: getRowColor(index) }}\n                hover\n              >\n                <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\n                  {company.companyName}\n                </TableCell>\n                <TableCell className={classes.tableCell}>{company.type}</TableCell>\n                <TableCell className={classes.tableCell}>\n                  <Link href={company.careerPortal} target=\"_blank\" rel=\"noopener\" className={classes.link}>\n                    {company.careerPortal}\n                  </Link>\n                </TableCell>\n                <TableCell className={classes.tableCell}>{company.netWorth}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.addButton}\n      >\n        Add\n      </Button>\n    </div>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Dashboard></Dashboard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}